#!ipxe
###
### netboot.xyz-custom menu
###

### Permanently require trusted images
	#imgtrust --permanent

###Define Indent
	set spaces2:hex 20:20
	set spaces4:hex 20:20:20:20
	set spaces8:hex 20:20:20:20:20:20:20:20
	#set spaces16:hex 20:20:20:20:20:20:20:20:20:20:20:20:20:20:20:20
	set spaces2 ${spaces2:string}
	set spaces4 ${spaces4:string}
	set spaces8 ${spaces8:string}
	set spaces16 ${spaces16:string}
	### Define Colors if 'cpair' and 'color' have not been included in iPXE build
	### use http://www.isthe.com/chongo/tech/comp/ansi_escapes.html and
	### 	https://www.binaryhexconverter.com/ascii-text-to-hex-converter
	### All ANSI Sequences start with ESC[ which is [ in ASCI which is 1b:5b converted to Hex
	### ESC[J Clear screen and home cursor
	set cls:hex 1b:5b:4a  ### ANSI clear screen sequence - "#^#[#[#J" aka "##[#J ###
	set cls ${cls:string}
	### Text/Foreground  Colors
	### The format is ESC[%number%m, so
		### 30 black foreground
		set blackfg:hex 1b:5b:33:30:6d
		set blackfg ${blackfg:string}
		### 31 red foreground
		set redfg:hex 1b:5b:33:31:6d
		set redfg ${redfg:string}
		### 32 green foreground
		set greenfg:hex 1b:5b:33:32:6d
		set greenfg ${greenfg:string}
		### 33 yellow foreground
		set yellowfg:hex 1b:5b:33:33:6d
		set yellowfg ${yellowfg:string}
		### 34 blue foreground
		set bluefg:hex 1b:5b:33:34:6d
		set bluefg ${bluefg:string}
		### 35 magenta foreground
		set magentafg:hex 1b:5b:33:35:6d
		set magentafg ${magentafg:string}
		### 36 cyan foreground
		set cyanfg:hex 1b:5b:33:36:6d
		set cyanfg ${cyanfg:string}
		### 37 white foreground
		set whitefg:hex 1b:5b:33:37:6d
		set whitefg ${whitefg:string}
		### 39 default foreground
		set defaultfg:hex 1b:5b:33:39:6d
		set defaultfg ${defaultfg:string}
	### Background  Colors
	### The format is ESC[%number%m, so
	### ESC[42m is green background
	### ESC[43m is yellow background
		### 40 black background
		set blackbg:hex 1b:5b:34:30:6d
		set blackbg ${blackbg:string}
		### 41 red background
		set redbg:hex 1b:5b:34:31:6d
		set redbg ${redbg:string}
		### 42 green background
		set greenbg:hex 1b:5b:34:32:6d
		set greenbg ${greenbg:string}
		### 43 yellow background
		set yellowbg:hex 1b:5b:34:33:6d
		set yellowbg ${yellowbg:string}
		### 44 blue background
		set bluebg:hex 1b:5b:34:34:6d
		set bluebg ${bluebg:string}
		### 45 magenta background
		set magentabg:hex 1b:5b:34:35:6d
		set magentabg ${magentabg:string}
		### 46 cyan background
		set cyanbg:hex 1b:5b:34:36:6d
		set cyanbg ${cyanbg:string}
		### 47 white background
		set whitebg:hex 1b:5b:34:37:6d
		set whitebg ${whitebg:string}
		### 49 default background
		set defaultbg:hex 1b:5b:34:39:6d
		set defaultbg ${defaultbg:string}

### iPXE menu settings
	### Set a background picture * Not enabled in netboot.xyz build
	#console --picture http://boot.ipxe.org/ipxe.png
	### Set a background picture with margins * Not enabled in netboot.xyz build
	#console --picture http://boot.ipxe.org/texture.png --left 32 --right 32 --top 32 --bottom 48
	### Define ClearScreen
	#http://www.isthe.com/chongo/tech/comp/ansi_escapes.html

### Set Infohead
	set menuname DasBoot
	set menuvers v6.00.01
	set menudate (2018-03-23)
	set menu ${blackbg}${redfg}${menuname} ${menuvers} ${menudate}
	set horiline ==========================================================================

### Check if BIOS or UEFI is used
	iseq ${platform} pcbios && set fwplatform BIOS ||
	iseq ${platform} efi && set fwplatform UEFI ||

### Check CPU architecture
	### x86: You can use the cpuid command to determine the architecture of the current machine
	### Don't use ${buildarch} as this just shows the version of iPXE was compiled for and which is served from DHCP.
	### The build architecture does not necessarily represent the architecture of the machine on which iPXE is running.
	### In particular, a version of iPXE built for i386 may be running on a 64-bit machine.
	cpuid --ext 29 && set cpuarch x86_64 || set cpuarch i386
	iseq ${cpuarch} x86_64 && set cpuarch_text 64-bit CPU || set cpuarch_text 32-bit CPU
	### ARM
	iseq ${buildarch} arm64 && set cpuarch arm64 ||
	iseq ${buildarch} arm64 && set cpuarch_text 64bit ARM CPU ||
	iseq ${buildarch} arm32 && set cpuarch arm32 ||
	iseq ${buildarch} arm32 && set cpuarch_text 32bit ARM CPU ||

:dasboot-main-menu
	menu ${menu}
	item --gap -- ${horiline}
	#tem --gap ==========================================================================
	item --gap ${manufacturer} ${product} in ${fwplatform} Mode using a ${cpuarch_text}
	item --key p info-pciscan ${whitefg}- Identify all ${redfg}P${whitefg}CI devices
	item --key n info-network ${whitefg}- Show ${redfg}N${whitefg}etwork information
	#tem --key h info-hdt     ${spaces2}- BIOS-only: identify all devices with (H)DT
	item --gap -- ==========================================
	#item --key r info-retrieved                              = Show Fetched Images (imgstat) =
	item --key r info-retrieved ${spaces8}${spaces8}${spaces8}${spaces8}${spaces8} = Show Fetched Images (imgstat) =
	item --key k info-discard   ${spaces8}${spaces8}${spaces8}${spaces8}${spaces8} =${spaces2}Discard All Images (imgfree) =
	#item --key r info-retrieved ${spaces8}${spaces8}${spaces8}${spaces8}${whitefg} = ${redfg} r ${whitefg} fimgstat
	#tem --key k info-discard                                =  Discard All Images (imgfree) =
	#item --key k info-discard ${spaces16}${spaces16}${spaces16}${spaces8}${whitefg} = ${redfg} k ${whitefg} fimgfree
	item --gap Boot: ${spaces8}${spaces8}${spaces8}${spaces8}${spaces2} ==========================================
	item --key d diagnostic-submenu     ${spaces2}${yellowfg}D${whitefg}iagnostic Tools              # Das
	item --key b bios-submenu           ${spaces2}${yellowfg}B${whitefg}IOS Updates                  # Boot
	item --key f firmware-submenu       ${spaces2}${yellowfg}F${whitefg}irmware Updates              # Firmware
	item --key w wiping-submenu         ${spaces2}${yellowfg}W${whitefg}iping/Media Sanitation Tools # Wiping
	item
	item
	item --gap Other:
	#tem --key r reboot                 ${spaces2}${greenfg}R${whitefg}eboot                         # R
	item --key o other                  ${spaces2}${greenfg}O${whitefg}ther iPXE boot menus          # O
	item --key c changelog              ${spaces2}${greenfg}C${whitefg}hangelog                      # C
	#tem --key k rocks                  ${spaces2}${greenfg}K${whitefg}K                             # K
	item --key s shell                  ${spaces2}${greenfg}S${whitefg}hell                          # S
	item
	item --gap Press ESC anywhere to return to the previous menu.
	### The user is able to use Ctrl-C (or Escape) to exit the menu without making a selection.
	### You may therefore wish to always handle failures of the choose command.
	### Also set Changelog as Default when loading this menu for the first time or when exiting to it from a submenu
	choose --default changelog dasboot-main-menu_choice && goto ${dasboot-main-menu_choice} || goto dasboot-main-menu

:info-pciscan
	### copied from http://boot.salstar.sk/lspci.ipxe and slightly modified
	### see also http://ipxe.org/cmd/pciscan
	clear addr
	pciscan addr && goto info-pciscan_found ||
	echo Missing "pciscan" command. Recompile iPXE with CMD_PCI.
	prompt
	goto dasboot-main-menu
	:info-pciscan_found
		### temporary using local for testing things
		imgfetch pciids.ipxe
		### HTTPS fails; not sure why
		#imgfetch http://boot.salstar.sk/pciids.ipxe || goto failed_download
		### verify fails; not sure why
		### imgverify pciids.ipxe http://boot.salstar.sk/sigs/pciids.ipxe.sig || goto failed_verify
		clear addr
		menu boot.salstar.sk's PCIscan using latest PCI.IDs (2018-03-15)
		:info-pciscan_loop
			pciscan addr || goto info-pciscan_done
			clear ven
			clear dev
			set vendor ${pci/${addr}.0.2}
			set device ${pci/${addr}.2.2}
			### temporary using local for testing things
			chain pciids.ipxe
			item --gap ${addr:busdevfn} ${vendor}:${device} ${ven}
			item 2dot ..${dev}
			item 
			goto info-pciscan_loop
	:info-pciscan_done
		choose press_enter ||
		goto dasboot-main-menu

:info-network
	### temporary using local for testing things
	imgfetch pciids.ipxe || goto failed_download
	### HTTPS fails; not sure why
	#imgfetch http://boot.salstar.sk/pciids.ipxe || goto failed_download
	clear vendorcleartext-nic0
	clear vendorcleartext-nic1
	clear devicecleartext-nic0
	clear devicecleartext-nic1
	:pciscan-nic0
		clear ven
		clear vendor
		clear dev
		clear device
		### pciids.ipxe uses ${vendor} and ${device} variables for processing
		set vendor ${pci/${net0/busloc}.0.2}
		set device ${pci/${net0/busloc}.2.2}
		chain pciids.ipxe || goto failed_download
		### pciids.ipxe spits out ${ven} and ${dev}
		set vendorcleartext-nic0 ${ven}
		set devicecleartext-nic0 ${dev}
	:pciscan-nic1
		clear ven
		clear vendor
		clear dev
		clear device
		set vendor ${pci/${net1/busloc}.0.2}
		set device ${pci/${net1/busloc}.2.2}
		chain pciids.ipxe || goto failed_download
		set vendorcleartext-nic1 ${ven}
		set devicecleartext-nic1 ${dev}
	
:info-network-nic0
	menu ${menuname} ${menuvers} ${menudate}
	item --gap ${horiline}
	item --gap Select a different NIC:
	item info-network-nic0 - NIC 0 (${net0/busloc:busdevfn} ${pci/${net0/busloc}.0.2}:${pci/${net0/busloc}.2.2})
	item info-network-nic1 - NIC 1 (${net1/busloc:busdevfn} ${pci/${net1/busloc}.0.2}:${pci/${net1/busloc}.2.2})
	#tem info-network-nic2 - NIC 2 (${pci/${net2/busloc}.0.2}:${pci/${net2/busloc}.2.2})
	item --gap ${horiline}
	item
	item --gap Vendor Name....: ${vendorcleartext-nic0}
	item --gap Device Name....: ${devicecleartext-nic0}
	item --gap Driver Name....: ${net0/chip}
	item --gap MAC............: ${net0/mac}
	item --gap IP.............: ${net0/ip}
	item --gap Netmask........: ${net0/netmask}
	item --gap Gateway........: ${net0/gateway}
	item --gap Domain Name....: ${net0/domain}
	item --gap DNS Server.....: ${net0/dns}
	item
	item --gap DHCP
	item --gap Server Name....: ${net0/dhcp-server}
	item --gap Next-Server....: ${next-server}
	item --gap Bootfile Name..: ${net0/filename}
	choose --default info-network-nic1 info-network-nic0_choice && goto ${info-network-nic0_choice} || goto dasboot-main-menu
	
:info-network-nic1
	menu ${menuname} ${menuvers} ${menudate}
	item --gap ${horiline}
	item --gap Select a different NIC:
	item info-network-nic0 - NIC 0 (${net0/busloc:busdevfn} ${pci/${net0/busloc}.0.2}:${pci/${net0/busloc}.2.2})
	item info-network-nic1 - NIC 1 (${net1/busloc:busdevfn} ${pci/${net1/busloc}.0.2}:${pci/${net1/busloc}.2.2})
	#tem info-network-nic2 - NIC 2 (${pci/${net2/busloc}.0.2}:${pci/${net2/busloc}.2.2})
	item --gap ${horiline}
	item
	item --gap Vendor Name....: ${vendorcleartext-nic1}
	item --gap Device Name....: ${devicecleartext-nic1}
	item --gap Driver Name....: ${net1/chip}
	item --gap MAC............: ${net1/mac}
	item --gap IP.............: ${net1/ip}
	item --gap Netmask........: ${net1/netmask}
	item --gap Gateway........: ${net1/gateway}
	item --gap Domain Name....: ${net1/domain}
	item --gap DNS Server.....: ${net1/dns}
	item
	item --gap DHCP
	item --gap Server Name....: ${net1/dhcp-server}
	item --gap Next-Server....: ${next-server}
	item --gap Bootfile Name..: ${net1/filename}
	choose --default info-network-nic0 info-network-nic1_choice && goto ${info-network-nic1_choice} || goto dasboot-main-menu

#:info-network-nic2
#	menu Device and Network Information for NIC 2
#	item --gap Choose a different NIC:
#	item --key 0 info-network-nic0 - NIC (0)
#	item --key 1 info-network-nic1 - NIC (1)
#	item --key 2 info-network-nic2 - NIC (2)
#	item
#	item
#	item --gap NIC 2 (${pci/${net2/busloc}.0.2}:${pci/${net2/busloc}.2.2})
#	item --gap ${spaces4}Driver : ${net2/chip}
#	item --gap ${spaces4}MAC${spaces4}: ${net2/mac}
#	item --gap ${spaces4}IP${spaces4} : ${net2/ip}
#	item --gap ${spaces4}Netmask: ${net2/netmask}
#	item --gap ${spaces4}Gateway: ${net2/gateway}
#	item --gap ${spaces4}Domain : ${net2/domain}
#	item --gap ${spaces4}DNS${spaces4}: ${net2/dns}
#	item
#	item
#	item --gap DHCP
#	item --gap server${spaces4} : ${net2/dhcp-server}
#	item --gap Next-server: ${next-server}
#	item --gap bootfile${spaces2} : ${net2/filename}
#	choose --default info-network-nic0 info-network-nic2_choice && goto ${info-network-nic2_choice} || goto dasboot-main-menu
	
#:info-hdt
#	kernel hdt.c32 || goto error
#	module modules.alias || goto error
#	module pci.ids || goto error
#	boot || goto error
#	goto dasboot-main-menu

:info-retrieved
imgstat
prompt
goto dasboot-main-menu

:info-discard
imgfree
prompt
goto dasboot-main-menu

:diagnostic-submenu
echo boot memtest86
imgstat
imgfree
imgstat
prompt
	### http://www.syslinux.org/wiki/index.php?title=MEMDISK#Floppy_images
	### http://ipxe.org/appnote/memtest
	### https://mirrors.edge.kernel.org/pub/linux/utils/boot/syslinux/Testing/
# http://ipxe.org/cfg/vram states: chain -a http://boot.ipxe.org/memtest.0 onepass onefail && goto ok || goto bad
#	.0    PXE bootstrap program (NBP) [PXELINUX only]
#	.bin  "CD boot sector" [ISOLINUX only]
#	.bs   Boot sector [SYSLINUX only]
#	.bss  Boot sector, DOS superblock will be patched in [SYSLINUX only]
#	.c32  COM32 image (32-bit COMBOOT)
#	.cbt  COMBOOT image (not runnable from DOS)
#	.com  COMBOOT image (runnable from DOS)
#	.img  Disk image [ISOLINUX only]
boot https://boot.ipxe.org/memtest501.0 onepass onefail && goto dasboot-main-menu || goto error

# kernel memdisk iso bigraw || goto error
# initrd memtest5.iso || goto error
# boot
#boot http://boot.ipxe.org/memtest.bin
#boot memtest4 || goto error
	### Latest Pre-Compiled Bootable Binary of stale Memtest: http://www.memtest.org/download/5.01/memtest86+-5.01.bin.gz
	### Latest Pre-Compiled Bootable ISO of stale Memtest   : http://www.memtest.org/download/5.01/memtest86+-5.01.iso.gz
	### Latest Pre-Compiled Floppy package of stale Memtest : http://www.memtest.org/download/5.01/memtest86+-5.01.floppy.zip
	### https://boot.ipxe.org/memtest*versions
	### https://boot.ipxe.org/memtest.bin
#initrd http://www.memtest86.com/downloads/memtest86-4.3.7-floppy.tar.gz
#initrd http://www.memtest.org/download/5.01/memtest86+-5.01.bin.gz
#imgfetch http://www.memtest.org/download/5.01/memtest86+-5.01.bin.gz
#carefull! apparantly there is a bug with +/PLUS in the filename. Great this invalidates all the tests
#boot memtest86+-5.01.bin.gz
#initrd memtest4.iso || goto error
# boot || goto error
# https://raw.githubusercontent.com/${github_user}/netboot.xyz-custom/master/${dasboot-main-menu_choice}.ipxe || goto error
# https://www.memtest86.com/downloads/memtest86-4.3.7-iso.tar.gz
# https://www.memtest86.com/downloads/memtest86-4.3.7-floppy.tar.gz
# https://www.memtest86.com/downloads/memtest86-4.3.7-usb.tar.gz
# https://www.memtest86.com/technical.htm#network
goto dasboot-main-menu

:bios-submenu
	echo https://raw.githubusercontent.com/${github_user}/netboot.xyz-custom/master/${dasboot-main-menu_choice}.ipxe || goto error
	prompt
	goto dasboot-main-menu

:firmware-submenu
	echo chain firmware-submenu.ipxe || goto error
	prompt
	goto dasboot-main-menu

:wiping-submenu
	echo chain wiping-submenu.ipxe || goto error
	prompt
	goto dasboot-main-menu

:reboot
	reboot

:other
	### if chaining here, e.g. netboot's main menu.ipxe, the *.ipxe script has to be in the same location as this script
	echo chaining into other iPXE boot menus (e.g. https://boot.salstar.sk/boot.ipxe #or menu.ipxe)
	prompt
	goto exit

:changelog
	echo chain changelog.ipxe
	prompt
	goto dasboot-main-menu

:rocks
	goto dasboot-main-menu

:shell
	echo Type 'exit' to return to the menu
	shell
	goto dasboot-main-menu

:failed_download
	echo
	echo Failed to download a file.
	goto error

:failed_verify
	echo
	echo Failed to verify a file.
	goto error

:error
	echo Error occured, press any key to return to main menu ...
	prompt
	goto dasboot-main-menu

:exit
	imgfree
	exit
